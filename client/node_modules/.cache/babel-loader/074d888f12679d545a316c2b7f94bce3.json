{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Monday from './Monday';\nimport Tuesday from './Tuesday';\nimport Wednesday from './Wednesday';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Planning = ({\n  recipesList\n}) => {\n  _s();\n\n  const [updatedRecipes, setUpdatedRecipes] = useState([]);\n  const [monday, setMonday] = useState([]);\n  const [tuesday, setTuesday] = useState([]);\n  const [wednesday, setWednesday] = useState([]); // const [thursday, setThursday] = useState([]);\n  // const [friday, setFriday] = useState([]);\n  // const [saturday, setSaturday] = useState([]);\n  // const [sunday, setSunday] = useState([]);\n\n  useEffect(() => {\n    setUpdatedRecipes(recipesList);\n  }, [recipesList]);\n\n  const handleClick = function () {\n    onClick();\n  };\n\n  const onClick = function () {\n    findMondayBreakfast(updatedRecipes);\n    findMondayDinner(updatedRecipes); // findTuesdayMenu(updatedRecipes);\n    // findWednesdayMenu(updatedRecipes);\n  };\n\n  const findMondayBreakfast = function (recipes) {\n    const breakfast = findTypicalBreakfast(recipes);\n    const copiedMonday = [...monday, dinner];\n    setMonday(copiedMonday);\n  };\n\n  const findMondayDinner = function (recipes) {\n    const dinners = matchDinnerWithTypicalBreakfast(recipes);\n    const dinner = dinners[Math.floor(Math.random() * dinners.length)];\n    removeDinnerFromList(dinner);\n    const copiedMonday = [...monday, dinner];\n    setMonday(copiedMonday);\n  }; // monday.push(breakfast);\n  // setMonday(breakfast);\n  // const findTuesdayMenu = function(recipes){\n  //     const breakfast = findTypicalBreakfast(recipes);\n  //     const dinners = matchDinnerWithTypicalBreakfast(recipes);\n  //     const dinner = new Array(dinners[Math.floor(Math.random() * dinners.length)]);\n  //     removeDinnerFromList(dinner);\n  //     const tuesdayMenu = [...breakfast, ...dinner];\n  //     setTuesday(tuesdayMenu);\n  // }\n  // const findWednesdayMenu = function(recipes){\n  //     const breakfast = findTypicalBreakfast(recipes);\n  //     const dinners = matchDinnerWithTypicalBreakfast(recipes);\n  //     const dinner = new Array(dinners[Math.floor(Math.random() * dinners.length)]);\n  //     removeDinnerFromList(dinner);\n  //     const wednesdayMenu = [...breakfast, ...dinner];\n  //     setWednesday(wednesdayMenu);\n  // }\n\n\n  const findRecipesByType = function (recipes, meal) {\n    const recipesByType = recipes.filter(recipe => recipe.type === meal);\n    return recipesByType;\n  };\n\n  const findTypicalBreakfast = function (recipes) {\n    const breakfastRecipes = findRecipesByType(recipes, \"Breakfast\");\n    const typicalBreakfast = breakfastRecipes.filter(recipe => recipe.name === \"Sausage And Egg Salad\");\n    return typicalBreakfast;\n  };\n\n  const matchDinnerWithTypicalBreakfast = function (recipes) {\n    const dinnerRecipes = findRecipesByType(recipes, \"Dinner\");\n    let possibleDinner = dinnerRecipes;\n    dinnerRecipes.filter(function (recipe) {\n      const index = dinnerRecipes.indexOf(recipe);\n\n      if (recipe.protein > 68.8) {\n        dinnerRecipes.splice(index, 1);\n      } else if (recipe.carbohydrate > 20.1) {\n        dinnerRecipes.splice(index, 1);\n      } else if (recipe.fat > 70.9) {\n        dinnerRecipes.splice(index, 1);\n      }\n\n      return possibleDinner;\n    });\n    return possibleDinner;\n  };\n\n  const removeDinnerFromList = function (recipe) {\n    const copiedUpdatedRecipes = [...updatedRecipes];\n    copiedUpdatedRecipes.splice(recipe, 1);\n    setUpdatedRecipes(copiedUpdatedRecipes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-plan\",\n      onClick: () => {\n        handleClick();\n      },\n      type: \"button\",\n      children: \"Plan Your Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planning-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planning\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table-week\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"day\",\n                children: \"Monday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Monday, {\n                monday: monday\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Planning, \"P8McugTkJKmveMOhD9m4KevhiJc=\");\n\n_c = Planning;\nexport default Planning;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planning\");","map":{"version":3,"sources":["/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js"],"names":["React","useState","useEffect","Monday","Tuesday","Wednesday","Planning","recipesList","updatedRecipes","setUpdatedRecipes","monday","setMonday","tuesday","setTuesday","wednesday","setWednesday","handleClick","onClick","findMondayBreakfast","findMondayDinner","recipes","breakfast","findTypicalBreakfast","copiedMonday","dinner","dinners","matchDinnerWithTypicalBreakfast","Math","floor","random","length","removeDinnerFromList","findRecipesByType","meal","recipesByType","filter","recipe","type","breakfastRecipes","typicalBreakfast","name","dinnerRecipes","possibleDinner","index","indexOf","protein","splice","carbohydrate","fat","copiedUpdatedRecipes"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Monday from './Monday';\nimport Tuesday from './Tuesday';\nimport Wednesday from './Wednesday';\n\nconst Planning = ({recipesList}) => {\n\n    const [updatedRecipes, setUpdatedRecipes] = useState([]);\n    const [monday, setMonday] = useState([]);\n    const [tuesday, setTuesday] = useState([]);\n    const [wednesday, setWednesday] = useState([]);\n    // const [thursday, setThursday] = useState([]);\n    // const [friday, setFriday] = useState([]);\n    // const [saturday, setSaturday] = useState([]);\n    // const [sunday, setSunday] = useState([]);\n \n    useEffect(() => {\n        setUpdatedRecipes(recipesList)\n    }, [recipesList]);\n\n    const handleClick = function(){\n        onClick();\n    };\n    \n    const onClick = function(){\n        findMondayBreakfast(updatedRecipes);\n        findMondayDinner(updatedRecipes);\n        // findTuesdayMenu(updatedRecipes);\n        // findWednesdayMenu(updatedRecipes);\n    }\n\n    const findMondayBreakfast = function(recipes){\n        const breakfast = findTypicalBreakfast(recipes);\n        const copiedMonday = [...monday, dinner];\n        setMonday(copiedMonday);\n    }\n\n    const findMondayDinner = function(recipes){\n        const dinners = matchDinnerWithTypicalBreakfast(recipes);\n        const dinner = dinners[Math.floor(Math.random() * dinners.length)];\n        removeDinnerFromList(dinner);\n        const copiedMonday = [...monday, dinner];\n        setMonday(copiedMonday);\n    }\n\n        // monday.push(breakfast);\n        // setMonday(breakfast);\n    // const findTuesdayMenu = function(recipes){\n    //     const breakfast = findTypicalBreakfast(recipes);\n    //     const dinners = matchDinnerWithTypicalBreakfast(recipes);\n    //     const dinner = new Array(dinners[Math.floor(Math.random() * dinners.length)]);\n    //     removeDinnerFromList(dinner);\n    //     const tuesdayMenu = [...breakfast, ...dinner];\n    //     setTuesday(tuesdayMenu);\n    // }\n\n    // const findWednesdayMenu = function(recipes){\n    //     const breakfast = findTypicalBreakfast(recipes);\n    //     const dinners = matchDinnerWithTypicalBreakfast(recipes);\n    //     const dinner = new Array(dinners[Math.floor(Math.random() * dinners.length)]);\n    //     removeDinnerFromList(dinner);\n    //     const wednesdayMenu = [...breakfast, ...dinner];\n    //     setWednesday(wednesdayMenu);\n    // }\n\n    const findRecipesByType = function(recipes, meal){\n        const recipesByType = recipes.filter(recipe => recipe.type === meal);\n        return recipesByType;\n    }\n\n    const findTypicalBreakfast = function(recipes){\n        const breakfastRecipes = findRecipesByType(recipes, \"Breakfast\");\n        const typicalBreakfast = breakfastRecipes.filter(recipe => recipe.name === \"Sausage And Egg Salad\");\n        return typicalBreakfast;\n    }\n\n    const matchDinnerWithTypicalBreakfast = function(recipes){\n        const dinnerRecipes = findRecipesByType(recipes, \"Dinner\");\n        let possibleDinner = dinnerRecipes\n        dinnerRecipes.filter(function(recipe){\n            const index = dinnerRecipes.indexOf(recipe);\n            if(recipe.protein > 68.8){\n                dinnerRecipes.splice(index, 1);\n            }\n            else if(recipe.carbohydrate > 20.1){\n                dinnerRecipes.splice(index, 1);\n            }\n            else if(recipe.fat > 70.9){\n                dinnerRecipes.splice(index, 1);\n            }\n            return possibleDinner;\n        })\n        return possibleDinner;\n    }\n\n    const removeDinnerFromList = function(recipe){\n        const copiedUpdatedRecipes = [...updatedRecipes];\n        copiedUpdatedRecipes.splice(recipe, 1);\n        setUpdatedRecipes(copiedUpdatedRecipes);\n    };\n\n    return(\n        <>\n        <button className=\"submit-plan\" onClick={() => {handleClick()}} type=\"button\">Plan Your Week</button>\n        <div className=\"planning-container\">\n            <div className=\"planning\">\n                <table className=\"table-week\">\n                    <tbody>\n                        <tr>\n                            <td className=\"day\">Monday</td>\n                            <Monday monday={monday}/>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        {/* <div className=\"planning-container\">\n            <div className=\"planning\">\n                <table className=\"table-week\">\n                    <tbody>\n                        <tr>\n                            <td className=\"day\">Tuesday</td>\n                            <Tuesday tuesday={tuesday}/>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div className=\"planning-container\">\n            <div className=\"planning\">\n                <table className=\"table-week\">\n                    <tbody>\n                        <tr>\n                            <td className=\"day\">Wednesday</td>\n                            <Wednesday wednesday={wednesday}/>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div> */}\n        </>\n    )\n\n}\n\nexport default Planning;\n"]},"metadata":{},"sourceType":"module"}