{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Monday from './Monday';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Planning = ({\n  recipesList\n}) => {\n  _s();\n\n  const [updatedRecipes, setUpdatedRecipes] = useState([]);\n  const [monday, setMonday] = useState([]); // const [tuesday, setTuesday] = useState([]);\n  // const [wednesday, setWednesday] = useState([]);\n  // const [thursday, setThursday] = useState([]);\n  // const [friday, setFriday] = useState([]);\n  // const [saturday, setSaturday] = useState([]);\n  // const [sunday, setSunday] = useState([]);\n\n  useEffect(() => {\n    setUpdatedRecipes(recipesList);\n  }, [recipesList]);\n\n  const onClick = function () {\n    const breakfast = findTypicalBreakfast(updatedRecipes);\n    const dinnerRecipes = matchDinnerWithTypicalBreakfast(updatedRecipes);\n    console.log(dinnerRecipes);\n    const dinner = new Array(dinnerRecipes[Math.floor(Math.random() * dinnerRecipes.length)]);\n    const mondayMenu = [...breakfast, ...dinner];\n    setMonday(mondayMenu);\n  };\n\n  const findRecipesByType = function (recipes, meal) {\n    const recipesByType = recipes.filter(recipe => recipe.type === meal);\n    return recipesByType;\n  };\n\n  const findTypicalBreakfast = function (recipes) {\n    const breakfastRecipes = findRecipesByType(recipes, \"Breakfast\");\n    const typicalBreakfast = breakfastRecipes.filter(recipe => recipe.name === \"Sausage And Egg Salad\");\n    return typicalBreakfast;\n  };\n\n  const matchDinnerWithTypicalBreakfast = function (recipes) {\n    const breakfast = findTypicalBreakfast(updatedRecipes);\n    const dinnerRecipes = findRecipesByType(updatedRecipes, \"Dinner\");\n    let possibleDinner = dinnerRecipes;\n    dinnerRecipes.forEach(function (recipe) {\n      if (99 - breakfast[0].protein - recipe.protein < 0) {\n        dinnerRecipes.shift();\n      } else if (25 - breakfast[0].carbohydrate - recipe.carbohydrate < 0) {\n        dinnerRecipes.shift();\n      } else if (128 - breakfast[0].fat - recipe.fat < 0) {\n        dinnerRecipes.shift();\n      }\n    });\n    return possibleDinner;\n  }; // function findBreakfastRecipes(recipes){\n  //     const breakfast = recipes.filter(recipe => recipe.type === \"Breakfast\");\n  //     const indexSausageEggSalad = breakfast.indexOf(recipes.name === \"Sausage And Egg Salad\");\n  //     breakfast.splice(indexSausageEggSalad, 1);\n  //     return breakfast;\n  // }\n  // const recipesForDinner = findRecipesByType(allRecipes, \"Dinner\");\n  // const recipesForFish = findRecipesByType(allRecipes, \"Fish\");\n  // const recipesForMeat = findRecipesByType(allRecipes, \"Meat\");\n  // const recipesForVegetables = findRecipesByType(allRecipes, \"Vegetables\");\n  // function typicalBreakfast(recipes){\n  //     const sausageAndEggSalad = recipes.find(recipe => recipe.name === \"Sausage And Egg Salad\");\n  //     return sausageAndEggSalad;\n  // }\n  // const breakfastMondayToFriday = new Array(typicalBreakfast(recipesForBreakfast));\n  // const mondayDinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)];\n  // const dinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)];\n  // // const mondayMenu = [...dinner, ...mondayDinner];\n  // function addProtein(recipes){\n  //     const totalProtein = recipes.reduce((total, recipe) => recipe.protein + total, 0.0);\n  //     return totalProtein\n  // }\n  // const mondayProtein = addProtein([dinner, mondayDinner]);\n  // const mondayBreakfast = new Array(mondayBreakfastRecipe(recipesForBreakfast));\n  // const mondayDinner = new Array(recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)]);\n  // const mondayMenu = [...mondayBreakfast, ...mondayDinner];\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Monday, {\n      monday: monday,\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Planning, \"g7gGwZxITp2VeY4y4KgtRrulSmc=\");\n\n_c = Planning;\nexport default Planning;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planning\");","map":{"version":3,"sources":["/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js"],"names":["React","useState","useEffect","Monday","Planning","recipesList","updatedRecipes","setUpdatedRecipes","monday","setMonday","onClick","breakfast","findTypicalBreakfast","dinnerRecipes","matchDinnerWithTypicalBreakfast","console","log","dinner","Array","Math","floor","random","length","mondayMenu","findRecipesByType","recipes","meal","recipesByType","filter","recipe","type","breakfastRecipes","typicalBreakfast","name","possibleDinner","forEach","protein","shift","carbohydrate","fat"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Monday from './Monday';\n\nconst Planning = ({recipesList}) => {\n\n    const [updatedRecipes, setUpdatedRecipes] = useState([]);\n    const [monday, setMonday] = useState([]);\n    // const [tuesday, setTuesday] = useState([]);\n    // const [wednesday, setWednesday] = useState([]);\n    // const [thursday, setThursday] = useState([]);\n    // const [friday, setFriday] = useState([]);\n    // const [saturday, setSaturday] = useState([]);\n    // const [sunday, setSunday] = useState([]);\n \n    useEffect(() => {\n        setUpdatedRecipes(recipesList)\n    }, [recipesList]);\n\n    const onClick = function(){\n        const breakfast = findTypicalBreakfast(updatedRecipes);\n        const dinnerRecipes = matchDinnerWithTypicalBreakfast(updatedRecipes);\n        console.log(dinnerRecipes)\n        const dinner = new Array(dinnerRecipes[Math.floor(Math.random() * dinnerRecipes.length)]);\n        const mondayMenu = [...breakfast, ...dinner];\n        setMonday(mondayMenu);\n    }\n\n    const findRecipesByType = function(recipes, meal){\n        const recipesByType = recipes.filter(recipe => recipe.type === meal);\n        return recipesByType;\n    }\n\n    const findTypicalBreakfast = function(recipes){\n        const breakfastRecipes = findRecipesByType(recipes, \"Breakfast\");\n        const typicalBreakfast = breakfastRecipes.filter(recipe => recipe.name === \"Sausage And Egg Salad\");\n        return typicalBreakfast;\n    }\n\n    const matchDinnerWithTypicalBreakfast = function(recipes){\n        const breakfast = findTypicalBreakfast(updatedRecipes);\n        const dinnerRecipes = findRecipesByType(updatedRecipes, \"Dinner\");\n\n        let possibleDinner = dinnerRecipes\n        dinnerRecipes.forEach(function(recipe){\n            if((99 - breakfast[0].protein) - recipe.protein < 0){\n                dinnerRecipes.shift();\n            }\n            else if((25 - breakfast[0].carbohydrate) - recipe.carbohydrate < 0){\n                dinnerRecipes.shift();\n            }\n            else if((128 - breakfast[0].fat) - recipe.fat < 0){\n                dinnerRecipes.shift();\n            }\n        })\n        return possibleDinner;\n    }\n\n    \n\n    // function findBreakfastRecipes(recipes){\n    //     const breakfast = recipes.filter(recipe => recipe.type === \"Breakfast\");\n    //     const indexSausageEggSalad = breakfast.indexOf(recipes.name === \"Sausage And Egg Salad\");\n    //     breakfast.splice(indexSausageEggSalad, 1);\n    //     return breakfast;\n    // }\n\n    // const recipesForDinner = findRecipesByType(allRecipes, \"Dinner\");\n    // const recipesForFish = findRecipesByType(allRecipes, \"Fish\");\n    // const recipesForMeat = findRecipesByType(allRecipes, \"Meat\");\n    // const recipesForVegetables = findRecipesByType(allRecipes, \"Vegetables\");\n\n    // function typicalBreakfast(recipes){\n    //     const sausageAndEggSalad = recipes.find(recipe => recipe.name === \"Sausage And Egg Salad\");\n    //     return sausageAndEggSalad;\n    // }\n\n    // const breakfastMondayToFriday = new Array(typicalBreakfast(recipesForBreakfast));\n    // const mondayDinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)];\n    // const dinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)];\n    // // const mondayMenu = [...dinner, ...mondayDinner];\n\n    // function addProtein(recipes){\n    //     const totalProtein = recipes.reduce((total, recipe) => recipe.protein + total, 0.0);\n    //     return totalProtein\n    // }\n\n    // const mondayProtein = addProtein([dinner, mondayDinner]);\n\n    // const mondayBreakfast = new Array(mondayBreakfastRecipe(recipesForBreakfast));\n    // const mondayDinner = new Array(recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)]);\n    // const mondayMenu = [...mondayBreakfast, ...mondayDinner];\n\n    return(\n        <>\n            <Monday monday={monday} onClick={onClick}/>\n        </>\n    )\n\n}\n\nexport default Planning;\n"]},"metadata":{},"sourceType":"module"}