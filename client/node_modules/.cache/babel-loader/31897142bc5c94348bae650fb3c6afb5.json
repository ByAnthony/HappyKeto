{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Documents/react_router_start_point/client/src/components/Monday.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Monday = ({\n  monday,\n  sideList\n}) => {\n  const sides = sideList;\n  const remainingProtein = subtractProtein(monday);\n  const remainingCarbs = subtractCarbs(monday);\n  const remainingFat = subtractFat(monday);\n\n  function subtractProtein(recipes) {\n    const recipesType = monday.map(recipe => recipe.type);\n\n    if (recipesType) {}\n\n    const totalProtein = recipes.reduce((total, recipe) => total + recipe.protein, 0);\n    const remainingProtein = 99 - totalProtein.toFixed(1);\n    return remainingProtein.toFixed(1);\n  }\n\n  function subtractCarbs(recipes) {\n    const totalCarbs = recipes.reduce((total, recipe) => total + recipe.carbohydrate, 0);\n    const remainingCarbs = 25 - totalCarbs.toFixed(1);\n    return remainingCarbs.toFixed(1);\n  }\n\n  function subtractFat(recipes) {\n    const totalFat = recipes.reduce((total, recipe) => total + recipe.fat, 0);\n    const remainingFat = 128 - totalFat.toFixed(1);\n    return remainingFat.toFixed(1);\n  }\n\n  function addCalories(recipes) {\n    const totalCalories = recipes.reduce((total, recipe) => total + recipe.calories, 0);\n    return totalCalories;\n  }\n\n  const filterProteinSide = function (recipes) {\n    const sideRecipes = recipes.filter(recipe => recipe.protein < remainingProtein);\n    return sideRecipes;\n  };\n\n  const filterCarbsSide = function (recipes) {\n    const sideRecipes = recipes.filter(recipe => recipe.carbohydrate < remainingCarbs);\n    return sideRecipes;\n  };\n\n  const filterFatSide = function (recipes) {\n    const sideRecipes = recipes.filter(recipe => recipe.fat < remainingFat);\n    return sideRecipes;\n  };\n\n  const proteinFilterSide = filterProteinSide(sides);\n  const carbsFilterSide = filterCarbsSide(proteinFilterSide);\n  const fatFilterSide = filterFatSide(carbsFilterSide);\n  const side = fatFilterSide.sort(function () {\n    return .5 - Math.random();\n  }).slice(0, 1);\n  const menu = monday.map(recipe => {\n    if (recipe.type === 'Meat') {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"menuoftheday\",\n        children: [recipe.name, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 77\n        }, this), side[0].name]\n      }, recipe._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    } else if (recipe.type === 'Fish') {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"menuoftheday\",\n        children: [recipe.name, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 77\n        }, this), side[0].name]\n      }, recipe._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"menuoftheday\",\n        children: recipe.name\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"macrooftheday\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"macro\",\n              children: \"Protein\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"macro\",\n              children: \"Carbs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"macro\",\n              children: \"Fat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"total-gram\",\n              children: subtractProtein(monday)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"total-gram\",\n              children: subtractCarbs(monday)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"total-gram\",\n              children: subtractFat(monday)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"recipesoftheday\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"meal-type\",\n              children: \"Breakfast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"meal-type\",\n              children: \"Dinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: menu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"calo\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"caloriesoftheday\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"macro\",\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"total-gram\",\n              children: addCalories(monday)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Monday;\nexport default Monday;\n\nvar _c;\n\n$RefreshReg$(_c, \"Monday\");","map":{"version":3,"sources":["/Users/anthony/Documents/react_router_start_point/client/src/components/Monday.js"],"names":["React","Monday","monday","sideList","sides","remainingProtein","subtractProtein","remainingCarbs","subtractCarbs","remainingFat","subtractFat","recipes","recipesType","map","recipe","type","totalProtein","reduce","total","protein","toFixed","totalCarbs","carbohydrate","totalFat","fat","addCalories","totalCalories","calories","filterProteinSide","sideRecipes","filter","filterCarbsSide","filterFatSide","proteinFilterSide","carbsFilterSide","fatFilterSide","side","sort","Math","random","slice","menu","name","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAEnC,QAAMC,KAAK,GAAGD,QAAd;AAEA,QAAME,gBAAgB,GAAGC,eAAe,CAACJ,MAAD,CAAxC;AACA,QAAMK,cAAc,GAAGC,aAAa,CAACN,MAAD,CAApC;AACA,QAAMO,YAAY,GAAGC,WAAW,CAACR,MAAD,CAAhC;;AAEA,WAASI,eAAT,CAAyBK,OAAzB,EAAiC;AAC7B,UAAMC,WAAW,GAAGV,MAAM,CAACW,GAAP,CAAWC,MAAM,IAAIA,MAAM,CAACC,IAA5B,CAApB;;AACA,QAAGH,WAAH,EAAe,CAEd;;AACD,UAAMI,YAAY,GAAGL,OAAO,CAACM,MAAR,CAAe,CAACC,KAAD,EAAQJ,MAAR,KAAmBI,KAAK,GAAGJ,MAAM,CAACK,OAAjD,EAA0D,CAA1D,CAArB;AACA,UAAMd,gBAAgB,GAAG,KAAKW,YAAY,CAACI,OAAb,CAAqB,CAArB,CAA9B;AACA,WAAOf,gBAAgB,CAACe,OAAjB,CAAyB,CAAzB,CAAP;AACH;;AAED,WAASZ,aAAT,CAAuBG,OAAvB,EAA+B;AAC3B,UAAMU,UAAU,GAAGV,OAAO,CAACM,MAAR,CAAe,CAACC,KAAD,EAAQJ,MAAR,KAAmBI,KAAK,GAAGJ,MAAM,CAACQ,YAAjD,EAA+D,CAA/D,CAAnB;AACA,UAAMf,cAAc,GAAG,KAAKc,UAAU,CAACD,OAAX,CAAmB,CAAnB,CAA5B;AACA,WAAOb,cAAc,CAACa,OAAf,CAAuB,CAAvB,CAAP;AACH;;AAED,WAASV,WAAT,CAAqBC,OAArB,EAA6B;AACzB,UAAMY,QAAQ,GAAGZ,OAAO,CAACM,MAAR,CAAe,CAACC,KAAD,EAAQJ,MAAR,KAAmBI,KAAK,GAAGJ,MAAM,CAACU,GAAjD,EAAsD,CAAtD,CAAjB;AACA,UAAMf,YAAY,GAAG,MAAMc,QAAQ,CAACH,OAAT,CAAiB,CAAjB,CAA3B;AACA,WAAOX,YAAY,CAACW,OAAb,CAAqB,CAArB,CAAP;AACH;;AAED,WAASK,WAAT,CAAqBd,OAArB,EAA6B;AACzB,UAAMe,aAAa,GAAGf,OAAO,CAACM,MAAR,CAAe,CAACC,KAAD,EAAQJ,MAAR,KAAmBI,KAAK,GAAGJ,MAAM,CAACa,QAAjD,EAA2D,CAA3D,CAAtB;AACA,WAAOD,aAAP;AACH;;AAED,QAAME,iBAAiB,GAAG,UAASjB,OAAT,EAAiB;AACvC,UAAMkB,WAAW,GAAGlB,OAAO,CAACmB,MAAR,CAAehB,MAAM,IAAIA,MAAM,CAACK,OAAP,GAAiBd,gBAA1C,CAApB;AACA,WAAOwB,WAAP;AACH,GAHD;;AAKA,QAAME,eAAe,GAAG,UAASpB,OAAT,EAAiB;AACrC,UAAMkB,WAAW,GAAGlB,OAAO,CAACmB,MAAR,CAAehB,MAAM,IAAIA,MAAM,CAACQ,YAAP,GAAsBf,cAA/C,CAApB;AACA,WAAOsB,WAAP;AACH,GAHD;;AAKA,QAAMG,aAAa,GAAG,UAASrB,OAAT,EAAiB;AACnC,UAAMkB,WAAW,GAAGlB,OAAO,CAACmB,MAAR,CAAehB,MAAM,IAAIA,MAAM,CAACU,GAAP,GAAaf,YAAtC,CAApB;AACA,WAAOoB,WAAP;AACH,GAHD;;AAKA,QAAMI,iBAAiB,GAAGL,iBAAiB,CAACxB,KAAD,CAA3C;AACA,QAAM8B,eAAe,GAAGH,eAAe,CAACE,iBAAD,CAAvC;AACA,QAAME,aAAa,GAAGH,aAAa,CAACE,eAAD,CAAnC;AAEA,QAAME,IAAI,GAAGD,aAAa,CACrBE,IADQ,CACH,YAAU;AAAE,WAAO,KAAKC,IAAI,CAACC,MAAL,EAAZ;AAA2B,GADpC,EAERC,KAFQ,CAEF,CAFE,EAEC,CAFD,CAAb;AAIA,QAAMC,IAAI,GAAGvC,MAAM,CAACW,GAAP,CAAWC,MAAM,IAAI;AAC9B,QAAGA,MAAM,CAACC,IAAP,KAAgB,MAAnB,EAA0B;AACtB,0BACI;AAAqB,QAAA,SAAS,EAAC,cAA/B;AAAA,mBAA+CD,MAAM,CAAC4B,IAAtD,oBAA4D;AAAA;AAAA;AAAA;AAAA,gBAA5D,EAAkEN,IAAI,CAAC,CAAD,CAAJ,CAAQM,IAA1E;AAAA,SAAS5B,MAAM,CAAC6B,GAAhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAIM,IAAG7B,MAAM,CAACC,IAAP,KAAgB,MAAnB,EAA0B;AAC5B,0BACI;AAAqB,QAAA,SAAS,EAAC,cAA/B;AAAA,mBAA+CD,MAAM,CAAC4B,IAAtD,oBAA4D;AAAA;AAAA;AAAA;AAAA,gBAA5D,EAAkEN,IAAI,CAAC,CAAD,CAAJ,CAAQM,IAA1E;AAAA,SAAS5B,MAAM,CAAC6B,GAAhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJK,MAID;AACD,0BACI;AAAqB,QAAA,SAAS,EAAC,cAA/B;AAAA,kBAA+C7B,MAAM,CAAC4B;AAAtD,SAAS5B,MAAM,CAAC6B,GAAhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ,GAdY,CAAb;AAgBA,sBACI;AAAA,4BACA;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,6BACI;AAAA,+BACI;AAAA,kCACI;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BrC,eAAe,CAACJ,MAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BM,aAAa,CAACN,MAAD;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BQ,WAAW,CAACR,MAAD;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAiBA;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAA,+BACI;AAAA,kCACI;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAA,sBACKuC;AADL;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjBA,eA8BA;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAA,+BACI;AAAA,kCACI;AAAA,mCACI;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,mCACI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BhB,WAAW,CAACvB,MAAD;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA9BA;AAAA,kBADJ;AA8CH,CAxHD;;KAAMD,M;AA0HN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\n\nconst Monday = ({monday, sideList}) => {\n\n    const sides = sideList;\n\n    const remainingProtein = subtractProtein(monday);\n    const remainingCarbs = subtractCarbs(monday);\n    const remainingFat = subtractFat(monday);\n\n    function subtractProtein(recipes){\n        const recipesType = monday.map(recipe => recipe.type);\n        if(recipesType){\n\n        }\n        const totalProtein = recipes.reduce((total, recipe) => total + recipe.protein, 0);\n        const remainingProtein = 99 - totalProtein.toFixed(1);\n        return remainingProtein.toFixed(1);\n    }\n\n    function subtractCarbs(recipes){\n        const totalCarbs = recipes.reduce((total, recipe) => total + recipe.carbohydrate, 0);\n        const remainingCarbs = 25 - totalCarbs.toFixed(1);\n        return remainingCarbs.toFixed(1);\n    }\n\n    function subtractFat(recipes){\n        const totalFat = recipes.reduce((total, recipe) => total + recipe.fat, 0);\n        const remainingFat = 128 - totalFat.toFixed(1);\n        return remainingFat.toFixed(1);\n    }\n\n    function addCalories(recipes){\n        const totalCalories = recipes.reduce((total, recipe) => total + recipe.calories, 0);\n        return totalCalories;\n    }\n\n    const filterProteinSide = function(recipes){\n        const sideRecipes = recipes.filter(recipe => recipe.protein < remainingProtein);\n        return sideRecipes;\n    }\n\n    const filterCarbsSide = function(recipes){\n        const sideRecipes = recipes.filter(recipe => recipe.carbohydrate < remainingCarbs);\n        return sideRecipes;\n    }\n\n    const filterFatSide = function(recipes){\n        const sideRecipes = recipes.filter(recipe => recipe.fat < remainingFat);\n        return sideRecipes;\n    }\n\n    const proteinFilterSide = filterProteinSide(sides);\n    const carbsFilterSide = filterCarbsSide(proteinFilterSide);\n    const fatFilterSide = filterFatSide(carbsFilterSide);\n\n    const side = fatFilterSide\n        .sort(function(){ return .5 - Math.random() })\n        .slice(0, 1);\n\n    const menu = monday.map(recipe => {\n        if(recipe.type === 'Meat'){\n            return(\n                <td key={recipe._id} className=\"menuoftheday\">{recipe.name}.<br/>{side[0].name}</td>\n            );\n        }else if(recipe.type === 'Fish'){\n            return(\n                <td key={recipe._id} className=\"menuoftheday\">{recipe.name}.<br/>{side[0].name}</td>\n            );\n        }else{\n            return(\n                <td key={recipe._id} className=\"menuoftheday\">{recipe.name}</td>\n            );\n        }\n    });\n\n    return(\n        <>\n        <td className=\"macrooftheday\">\n            <table>\n                <tbody>\n                    <tr>\n                        <th className=\"macro\">Protein</th>\n                        <th className=\"macro\">Carbs</th>\n                        <th className=\"macro\">Fat</th>\n                    </tr>\n                    <tr>\n                        <td className=\"total-gram\">{subtractProtein(monday)}</td>\n                        <td className=\"total-gram\">{subtractCarbs(monday)}</td>\n                        <td className=\"total-gram\">{subtractFat(monday)}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n        <td>\n            <table className=\"recipesoftheday\">\n                <tbody>\n                    <tr>\n                        <th className=\"meal-type\">Breakfast</th>\n                        <th className=\"meal-type\">Dinner</th>\n                    </tr>\n                    <tr>\n                        {menu}\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n        <td className=\"calo\">\n            <table className=\"caloriesoftheday\">\n                <tbody>\n                    <tr>\n                        <th className=\"macro\">Calories</th>\n                    </tr>\n                    <tr>\n                        <td className=\"total-gram\">{addCalories(monday)}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n        </>\n    );\n\n}\n\nexport default Monday;\n"]},"metadata":{},"sourceType":"module"}