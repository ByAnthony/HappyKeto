{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Planning = ({\n  allRecipes\n}) => {\n  _s();\n\n  const [updatedRecipes, setUpdatedRecipes] = useState([]);\n  useEffect(() => {\n    // 16 Effect\n    setUpdatedRecipes(allRecipes);\n  }, [allRecipes]);\n\n  function findBreakfast(recipes) {\n    const breakfast = recipes.filter(recipe => recipe.type === \"Breakfast\");\n    const indexSausageEggSalad = breakfast.indexOf(recipes.name === \"Sausage And Egg Salad\");\n    breakfast.splice(indexSausageEggSalad, 1);\n    return breakfast;\n  }\n\n  function findRecipesByType(recipes, meal) {\n    const recipesByType = recipes.filter(recipe => recipe.type === meal);\n    return recipesByType;\n  }\n\n  const recipesForBreakfast = findRecipesByType(allRecipes, \"Breakfast\");\n  const recipesForDinner = findRecipesByType(allRecipes, \"Dinner\");\n  const recipesForFish = findRecipesByType(allRecipes, \"Fish\");\n  const recipesForMeat = findRecipesByType(allRecipes, \"Meat\");\n  const recipesForVegetables = findRecipesByType(allRecipes, \"Vegetables\");\n\n  function typicalBreakfast(recipes) {\n    const sausageAndEggSalad = recipes.find(recipe => recipe.name === \"Sausage And Egg Salad\");\n    return sausageAndEggSalad;\n  }\n\n  const breakfastMondayToFriday = new Array(typicalBreakfast(recipesForBreakfast));\n  const mondayDinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)];\n  const dinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)]; // const mondayMenu = [...dinner, ...mondayDinner];\n\n  function addProtein(recipes) {\n    const totalProtein = recipes.reduce((total, recipe) => recipe.protein + total, 0.0);\n    return totalProtein;\n  }\n\n  const mondayProtein = addProtein([dinner, mondayDinner]); // const mondayBreakfast = new Array(mondayBreakfastRecipe(recipesForBreakfast));\n  // const mondayDinner = new Array(recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)]);\n  // const mondayMenu = [...mondayBreakfast, ...mondayDinner];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mondayProtein\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Planning, \"Mff2xLXPxZv5eTiu7Ktdb+NlaL8=\");\n\n_c = Planning;\nexport default Planning;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planning\");","map":{"version":3,"sources":["/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js"],"names":["React","useState","useEffect","Planning","allRecipes","updatedRecipes","setUpdatedRecipes","findBreakfast","recipes","breakfast","filter","recipe","type","indexSausageEggSalad","indexOf","name","splice","findRecipesByType","meal","recipesByType","recipesForBreakfast","recipesForDinner","recipesForFish","recipesForMeat","recipesForVegetables","typicalBreakfast","sausageAndEggSalad","find","breakfastMondayToFriday","Array","mondayDinner","Math","floor","random","length","dinner","addProtein","totalProtein","reduce","total","protein","mondayProtein"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAE/B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAAE;AACdI,IAAAA,iBAAiB,CAACF,UAAD,CAAjB;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,WAASG,aAAT,CAAuBC,OAAvB,EAA+B;AAC3B,UAAMC,SAAS,GAAGD,OAAO,CAACE,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgB,WAAzC,CAAlB;AACA,UAAMC,oBAAoB,GAAGJ,SAAS,CAACK,OAAV,CAAkBN,OAAO,CAACO,IAAR,KAAiB,uBAAnC,CAA7B;AACAN,IAAAA,SAAS,CAACO,MAAV,CAAiBH,oBAAjB,EAAuC,CAAvC;AACA,WAAOJ,SAAP;AACH;;AAED,WAASQ,iBAAT,CAA2BT,OAA3B,EAAoCU,IAApC,EAAyC;AACrC,UAAMC,aAAa,GAAGX,OAAO,CAACE,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgBM,IAAzC,CAAtB;AACA,WAAOC,aAAP;AACH;;AAED,QAAMC,mBAAmB,GAAGH,iBAAiB,CAACb,UAAD,EAAa,WAAb,CAA7C;AACA,QAAMiB,gBAAgB,GAAGJ,iBAAiB,CAACb,UAAD,EAAa,QAAb,CAA1C;AACA,QAAMkB,cAAc,GAAGL,iBAAiB,CAACb,UAAD,EAAa,MAAb,CAAxC;AACA,QAAMmB,cAAc,GAAGN,iBAAiB,CAACb,UAAD,EAAa,MAAb,CAAxC;AACA,QAAMoB,oBAAoB,GAAGP,iBAAiB,CAACb,UAAD,EAAa,YAAb,CAA9C;;AAEA,WAASqB,gBAAT,CAA0BjB,OAA1B,EAAkC;AAC9B,UAAMkB,kBAAkB,GAAGlB,OAAO,CAACmB,IAAR,CAAahB,MAAM,IAAIA,MAAM,CAACI,IAAP,KAAgB,uBAAvC,CAA3B;AACA,WAAOW,kBAAP;AACH;;AAED,QAAME,uBAAuB,GAAG,IAAIC,KAAJ,CAAUJ,gBAAgB,CAACL,mBAAD,CAA1B,CAAhC;AACA,QAAMU,YAAY,GAAGT,gBAAgB,CAACU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,gBAAgB,CAACa,MAA5C,CAAD,CAArC;AACA,QAAMC,MAAM,GAAGd,gBAAgB,CAACU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,gBAAgB,CAACa,MAA5C,CAAD,CAA/B,CAjC+B,CAkC/B;;AAEA,WAASE,UAAT,CAAoB5B,OAApB,EAA4B;AACxB,UAAM6B,YAAY,GAAG7B,OAAO,CAAC8B,MAAR,CAAe,CAACC,KAAD,EAAQ5B,MAAR,KAAmBA,MAAM,CAAC6B,OAAP,GAAiBD,KAAnD,EAA0D,GAA1D,CAArB;AACA,WAAOF,YAAP;AACH;;AAED,QAAMI,aAAa,GAAGL,UAAU,CAAC,CAACD,MAAD,EAASL,YAAT,CAAD,CAAhC,CAzC+B,CA4C/B;AACA;AACA;;AAEA,sBACI;AAAA,cACKW;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAtDD;;GAAMtC,Q;;KAAAA,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst Planning = ({allRecipes}) => {\n\n    const [updatedRecipes, setUpdatedRecipes] = useState([]);\n\n    useEffect(() => { // 16 Effect\n        setUpdatedRecipes(allRecipes)\n    }, [allRecipes]);\n\n    function findBreakfast(recipes){\n        const breakfast = recipes.filter(recipe => recipe.type === \"Breakfast\");\n        const indexSausageEggSalad = breakfast.indexOf(recipes.name === \"Sausage And Egg Salad\");\n        breakfast.splice(indexSausageEggSalad, 1);\n        return breakfast;\n    }\n\n    function findRecipesByType(recipes, meal){\n        const recipesByType = recipes.filter(recipe => recipe.type === meal);\n        return recipesByType;\n    }\n\n    const recipesForBreakfast = findRecipesByType(allRecipes, \"Breakfast\");\n    const recipesForDinner = findRecipesByType(allRecipes, \"Dinner\");\n    const recipesForFish = findRecipesByType(allRecipes, \"Fish\");\n    const recipesForMeat = findRecipesByType(allRecipes, \"Meat\");\n    const recipesForVegetables = findRecipesByType(allRecipes, \"Vegetables\");\n\n    function typicalBreakfast(recipes){\n        const sausageAndEggSalad = recipes.find(recipe => recipe.name === \"Sausage And Egg Salad\");\n        return sausageAndEggSalad;\n    }\n\n    const breakfastMondayToFriday = new Array(typicalBreakfast(recipesForBreakfast));\n    const mondayDinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)];\n    const dinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)];\n    // const mondayMenu = [...dinner, ...mondayDinner];\n\n    function addProtein(recipes){\n        const totalProtein = recipes.reduce((total, recipe) => recipe.protein + total, 0.0);\n        return totalProtein\n    }\n\n    const mondayProtein = addProtein([dinner, mondayDinner]);\n\n\n    // const mondayBreakfast = new Array(mondayBreakfastRecipe(recipesForBreakfast));\n    // const mondayDinner = new Array(recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)]);\n    // const mondayMenu = [...mondayBreakfast, ...mondayDinner];\n\n    return(\n        <div>\n            {mondayProtein}\n        </div>\n    )\n\n}\n\nexport default Planning;\n"]},"metadata":{},"sourceType":"module"}