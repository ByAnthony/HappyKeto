{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Monday from './Monday';\nimport Tuesday from './Tuesday';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Planning = ({\n  recipesList\n}) => {\n  _s();\n\n  const [updatedRecipes, setUpdatedRecipes] = useState([]);\n  const [monday, setMonday] = useState([]);\n  const [tuesday, setTuesday] = useState([]); // const [wednesday, setWednesday] = useState([]);\n  // const [thursday, setThursday] = useState([]);\n  // const [friday, setFriday] = useState([]);\n  // const [saturday, setSaturday] = useState([]);\n  // const [sunday, setSunday] = useState([]);\n\n  useEffect(() => {\n    setUpdatedRecipes(recipesList);\n  }, [recipesList]);\n\n  const handleClick = function () {\n    onClick();\n  };\n\n  const onClick = function () {\n    const breakfast = findTypicalBreakfast(updatedRecipes);\n    const dinnerRecipes = matchDinnerWithTypicalBreakfast(updatedRecipes);\n    const mondayDinner = new Array(dinnerRecipes[Math.floor(Math.random() * dinnerRecipes.length)]);\n    removeDinnerFromList(mondayDinner);\n    const mondayMenu = [...breakfast, ...mondayDinner];\n    setMonday(mondayMenu);\n    const tuesdayDinner = new Array(dinnerRecipes[Math.floor(Math.random() * dinnerRecipes.length)]);\n    removeDinnerFromList(tuesdayDinner);\n    const tuesdayMenu = [...breakfast, ...tuesdayDinner];\n    setTuesday(tuesdayMenu);\n  };\n\n  const findRecipesByType = function (recipes, meal) {\n    const recipesByType = recipes.filter(recipe => recipe.type === meal);\n    return recipesByType;\n  };\n\n  const findTypicalBreakfast = function (recipes) {\n    const breakfastRecipes = findRecipesByType(recipes, \"Breakfast\");\n    const typicalBreakfast = breakfastRecipes.filter(recipe => recipe.name === \"Sausage And Egg Salad\");\n    return typicalBreakfast;\n  };\n\n  const matchDinnerWithTypicalBreakfast = function (recipes) {\n    const dinnerRecipes = findRecipesByType(recipes, \"Dinner\");\n    let possibleDinner = dinnerRecipes;\n    dinnerRecipes.filter(function (recipe) {\n      const index = dinnerRecipes.indexOf(recipe);\n\n      if (recipe.protein > 68.8) {\n        dinnerRecipes.splice(index, 1);\n      } else if (recipe.carbohydrate > 20.1) {\n        dinnerRecipes.splice(index, 1);\n      } else if (recipe.fat > 70.9) {\n        dinnerRecipes.splice(index, 1);\n      }\n\n      return possibleDinner;\n    });\n    return possibleDinner;\n  };\n\n  const removeDinnerFromList = function (recipe) {\n    const copiedUpdatedList = [...updatedRecipes];\n    copiedUpdatedList.splice(recipe, 1);\n    setUpdatedRecipes(copiedUpdatedList);\n  };\n\n  const findMondayDinner = function () {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-plan\",\n      onClick: () => {\n        handleClick();\n      },\n      type: \"button\",\n      children: \"Plan Your Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planning-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planning\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table-week\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"day\",\n                children: \"Monday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Monday, {\n                monday: monday\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planning-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planning\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table-week\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"day\",\n                children: \"Tuesday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Tuesday, {\n                tuesday: tuesday\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Planning, \"PRpBh4b+d1IihPr7TDv7xPqS3g8=\");\n\n_c = Planning;\nexport default Planning;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planning\");","map":{"version":3,"sources":["/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js"],"names":["React","useState","useEffect","Monday","Tuesday","Planning","recipesList","updatedRecipes","setUpdatedRecipes","monday","setMonday","tuesday","setTuesday","handleClick","onClick","breakfast","findTypicalBreakfast","dinnerRecipes","matchDinnerWithTypicalBreakfast","mondayDinner","Array","Math","floor","random","length","removeDinnerFromList","mondayMenu","tuesdayDinner","tuesdayMenu","findRecipesByType","recipes","meal","recipesByType","filter","recipe","type","breakfastRecipes","typicalBreakfast","name","possibleDinner","index","indexOf","protein","splice","carbohydrate","fat","copiedUpdatedList","findMondayDinner"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Monday from './Monday';\nimport Tuesday from './Tuesday';\n\nconst Planning = ({recipesList}) => {\n\n    const [updatedRecipes, setUpdatedRecipes] = useState([]);\n    const [monday, setMonday] = useState([]);\n    const [tuesday, setTuesday] = useState([]);\n    // const [wednesday, setWednesday] = useState([]);\n    // const [thursday, setThursday] = useState([]);\n    // const [friday, setFriday] = useState([]);\n    // const [saturday, setSaturday] = useState([]);\n    // const [sunday, setSunday] = useState([]);\n \n    useEffect(() => {\n        setUpdatedRecipes(recipesList)\n    }, [recipesList]);\n\n    const handleClick = function(){\n        onClick();\n    };\n    \n    const onClick = function(){\n        const breakfast = findTypicalBreakfast(updatedRecipes);\n\n        const dinnerRecipes = matchDinnerWithTypicalBreakfast(updatedRecipes);\n\n        const mondayDinner = new Array(dinnerRecipes[Math.floor(Math.random() * dinnerRecipes.length)]);\n        removeDinnerFromList(mondayDinner);\n        const mondayMenu = [...breakfast, ...mondayDinner];\n        setMonday(mondayMenu);\n\n        const tuesdayDinner = new Array(dinnerRecipes[Math.floor(Math.random() * dinnerRecipes.length)]);\n        removeDinnerFromList(tuesdayDinner);\n        const tuesdayMenu = [...breakfast, ...tuesdayDinner];\n        setTuesday(tuesdayMenu);\n    }\n\n    const findRecipesByType = function(recipes, meal){\n        const recipesByType = recipes.filter(recipe => recipe.type === meal);\n        return recipesByType;\n    }\n\n    const findTypicalBreakfast = function(recipes){\n        const breakfastRecipes = findRecipesByType(recipes, \"Breakfast\");\n        const typicalBreakfast = breakfastRecipes.filter(recipe => recipe.name === \"Sausage And Egg Salad\");\n        return typicalBreakfast;\n    }\n\n    const matchDinnerWithTypicalBreakfast = function(recipes){\n        const dinnerRecipes = findRecipesByType(recipes, \"Dinner\");\n        let possibleDinner = dinnerRecipes\n        dinnerRecipes.filter(function(recipe){\n            const index = dinnerRecipes.indexOf(recipe);\n            if(recipe.protein > 68.8){\n                dinnerRecipes.splice(index, 1);\n            }\n            else if(recipe.carbohydrate > 20.1){\n                dinnerRecipes.splice(index, 1);\n            }\n            else if(recipe.fat > 70.9){\n                dinnerRecipes.splice(index, 1);\n            }\n            return possibleDinner;\n        })\n        return possibleDinner;\n    }\n\n    const removeDinnerFromList = function(recipe){\n        const copiedUpdatedList = [...updatedRecipes];\n        copiedUpdatedList.splice(recipe, 1);\n        setUpdatedRecipes(copiedUpdatedList);\n    };\n\n    const findMondayDinner = function(){\n        \n    }\n\n    return(\n        <>\n        <button className=\"submit-plan\" onClick={() => {handleClick()}} type=\"button\">Plan Your Week</button>\n        <div className=\"planning-container\">\n            <div className=\"planning\">\n                <table className=\"table-week\">\n                    <tbody>\n                        <tr>\n                            <td className=\"day\">Monday</td>\n                            <Monday monday={monday}/>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div className=\"planning-container\">\n            <div className=\"planning\">\n                <table className=\"table-week\">\n                    <tbody>\n                        <tr>\n                            <td className=\"day\">Tuesday</td>\n                            <Tuesday tuesday={tuesday}/>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        </>\n    )\n\n}\n\nexport default Planning;\n"]},"metadata":{},"sourceType":"module"}