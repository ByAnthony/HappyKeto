{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Documents/react_router_start_point/client/src/containers/RecipesContainer.js\";\nimport React from 'react';\nimport HappyKetoService from '../services/HappyKetoService';\nimport Recipes from '../components/Recipes.js';\nimport RecipeForm from '../components/RecipeForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipesContainer = ({\n  setAllRecipes = {\n    setAllRecipes\n  }\n}) => {\n  const createRecipe = newRecipe => {\n    HappyKetoService.postRecipe(newRecipe).then(savedRecipe => setAllRecipes([...recipes, savedRecipe]));\n  };\n\n  const deleteRecipe = idToDelete => {\n    HappyKetoService.deleteRecipe(idToDelete).then(() => {\n      setAllRecipes(recipes.filter(recipe => recipe._id !== idToDelete));\n    });\n  };\n\n  const updateRecipe = updatedRecipe => {\n    const updatedRecipe_id = {\n      name: updatedRecipe.name,\n      type: updatedRecipe.type,\n      protein: updatedRecipe.protein,\n      carbohydrate: updatedRecipe.carbohydrate,\n      fat: updatedRecipe.fat,\n      calories: updatedRecipe.calories,\n      portion: updatedRecipe.portion\n    };\n    HappyKetoService.updateRecipe(updatedRecipe_id, updatedRecipe._id);\n    const updatedRecipeIndex = recipes.findIndex(recipe => recipe._id === updatedRecipe._id);\n    const updatedRecipes = [...recipes];\n    updatedRecipes[updatedRecipeIndex] = updatedRecipe;\n    setAllRecipes(updatedRecipes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes-container\",\n      children: [/*#__PURE__*/_jsxDEV(RecipeForm, {\n        createRecipe: createRecipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Recipes, {\n        recipes: recipes,\n        deleteRecipe: deleteRecipe,\n        updateRecipe: updateRecipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RecipesContainer;\nexport default RecipesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipesContainer\");","map":{"version":3,"sources":["/Users/anthony/Documents/react_router_start_point/client/src/containers/RecipesContainer.js"],"names":["React","HappyKetoService","Recipes","RecipeForm","RecipesContainer","setAllRecipes","createRecipe","newRecipe","postRecipe","then","savedRecipe","recipes","deleteRecipe","idToDelete","filter","recipe","_id","updateRecipe","updatedRecipe","updatedRecipe_id","name","type","protein","carbohydrate","fat","calories","portion","updatedRecipeIndex","findIndex","updatedRecipes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,aAAa,GAAC;AAACA,IAAAA;AAAD;AAAf,CAAD,KAAqC;AAE1D,QAAMC,YAAY,GAAGC,SAAS,IAAI;AAC9BN,IAAAA,gBAAgB,CAACO,UAAjB,CAA4BD,SAA5B,EACCE,IADD,CACMC,WAAW,IAAIL,aAAa,CAAC,CAAC,GAAGM,OAAJ,EAAaD,WAAb,CAAD,CADlC;AAEH,GAHD;;AAKA,QAAME,YAAY,GAAGC,UAAU,IAAI;AAC/BZ,IAAAA,gBAAgB,CAACW,YAAjB,CAA8BC,UAA9B,EACCJ,IADD,CACM,MAAM;AACRJ,MAAAA,aAAa,CAACM,OAAO,CAACG,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAeH,UAAxC,CAAD,CAAb;AACH,KAHD;AAIH,GALD;;AAOA,QAAMI,YAAY,GAAIC,aAAD,IAAmB;AACpC,UAAMC,gBAAgB,GAAG;AACjBC,MAAAA,IAAI,EAACF,aAAa,CAACE,IADF;AAEjBC,MAAAA,IAAI,EAACH,aAAa,CAACG,IAFF;AAGjBC,MAAAA,OAAO,EAACJ,aAAa,CAACI,OAHL;AAIjBC,MAAAA,YAAY,EAACL,aAAa,CAACK,YAJV;AAKjBC,MAAAA,GAAG,EAACN,aAAa,CAACM,GALD;AAMjBC,MAAAA,QAAQ,EAACP,aAAa,CAACO,QANN;AAOjBC,MAAAA,OAAO,EAACR,aAAa,CAACQ;AAPL,KAAzB;AASAzB,IAAAA,gBAAgB,CAACgB,YAAjB,CAA8BE,gBAA9B,EAAgDD,aAAa,CAACF,GAA9D;AACA,UAAMW,kBAAkB,GAAGhB,OAAO,CAACiB,SAAR,CAAkBb,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAeE,aAAa,CAACF,GAAzD,CAA3B;AACA,UAAMa,cAAc,GAAG,CAAC,GAAGlB,OAAJ,CAAvB;AACAkB,IAAAA,cAAc,CAACF,kBAAD,CAAd,GAAqCT,aAArC;AACAb,IAAAA,aAAa,CAACwB,cAAD,CAAb;AACH,GAfD;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,YAAY,EAAEvB;AAA1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEK,OAAlB;AAA2B,QAAA,YAAY,EAAEC,YAAzC;AAAuD,QAAA,YAAY,EAAEK;AAArE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA1CD;;KAAMb,gB;AA4CN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport HappyKetoService from '../services/HappyKetoService';\nimport Recipes from '../components/Recipes.js';\nimport RecipeForm from '../components/RecipeForm';\n\nconst RecipesContainer = ({setAllRecipes={setAllRecipes}}) => {\n\n    const createRecipe = newRecipe => {\n        HappyKetoService.postRecipe(newRecipe)\n        .then(savedRecipe => setAllRecipes([...recipes, savedRecipe]))\n    };\n\n    const deleteRecipe = idToDelete => {\n        HappyKetoService.deleteRecipe(idToDelete)\n        .then(() => {\n            setAllRecipes(recipes.filter(recipe => recipe._id !== idToDelete))\n        })\n    };\n\n    const updateRecipe = (updatedRecipe) => {\n        const updatedRecipe_id = {\n                name:updatedRecipe.name,\n                type:updatedRecipe.type,\n                protein:updatedRecipe.protein,\n                carbohydrate:updatedRecipe.carbohydrate,\n                fat:updatedRecipe.fat,\n                calories:updatedRecipe.calories,\n                portion:updatedRecipe.portion\n        }\n        HappyKetoService.updateRecipe(updatedRecipe_id, updatedRecipe._id);\n        const updatedRecipeIndex = recipes.findIndex(recipe => recipe._id === updatedRecipe._id);\n        const updatedRecipes = [...recipes];\n        updatedRecipes[updatedRecipeIndex] = updatedRecipe;\n        setAllRecipes(updatedRecipes);\n    };\n\n    return(\n        <div className=\"main\">\n            <h1>Your Recipes</h1>\n            <div className=\"line\"></div>\n            <div className=\"recipes-container\">\n                <RecipeForm createRecipe={createRecipe}/>\n                <Recipes recipes={recipes} deleteRecipe={deleteRecipe} updateRecipe={updateRecipe}/>\n            </div>\n        </div>\n    );\n\n}\n\nexport default RecipesContainer;"]},"metadata":{},"sourceType":"module"}