{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Planning = ({\n  allRecipes\n}) => {\n  _s();\n\n  const [updatedRecipes, setUpdatedRecipes] = useState([]);\n  useEffect(() => {\n    // 16 Effect\n    setUpdatedRecipes(allRecipes);\n  }, [allRecipes]);\n\n  function findRecipesByType(recipes, meal) {\n    const recipesByType = recipes.filter(recipe => recipe.type === meal);\n    return recipesByType;\n  }\n\n  const recipesForBreakfast = findRecipesByType(allRecipes, \"Breakfast\");\n  const recipesForDinner = findRecipesByType(allRecipes, \"Dinner\"); // const recipesForFish = findRecipesByType(allRecipes, \"Fish\");\n  // const recipesForMeat = findRecipesByType(allRecipes, \"Meat\");\n  // const recipesForVegetables = findRecipesByType(allRecipes, \"Vegetables\");\n\n  function typicalBreakfast(recipes) {\n    const sausageAndEggSalad = recipes.find(recipe => recipe.name === \"Sausage And Egg Salad\");\n    return sausageAndEggSalad;\n  }\n\n  const breakfastMondayToFriday = new Array(typicalBreakfast(recipesForBreakfast));\n  const mondayDinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)];\n  const dinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)]; // const mondayMenu = [...dinner, ...mondayDinner];\n\n  function addProtein(recipes) {\n    const totalProtein = recipes.reduce((total, recipe) => recipe.protein + total, 0.0);\n    return totalProtein;\n  }\n\n  const mondayProtein = addProtein([dinner, mondayDinner]); // const mondayBreakfast = new Array(mondayBreakfastRecipe(recipesForBreakfast));\n  // const mondayDinner = new Array(recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)]);\n  // const mondayMenu = [...mondayBreakfast, ...mondayDinner];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mondayProtein\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Planning, \"Mff2xLXPxZv5eTiu7Ktdb+NlaL8=\");\n\n_c = Planning;\nexport default Planning;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planning\");","map":{"version":3,"sources":["/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js"],"names":["React","useState","useEffect","Planning","allRecipes","updatedRecipes","setUpdatedRecipes","findRecipesByType","recipes","meal","recipesByType","filter","recipe","type","recipesForBreakfast","recipesForDinner","typicalBreakfast","sausageAndEggSalad","find","name","breakfastMondayToFriday","Array","mondayDinner","Math","floor","random","length","dinner","addProtein","totalProtein","reduce","total","protein","mondayProtein"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAE/B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAAE;AACdI,IAAAA,iBAAiB,CAACF,UAAD,CAAjB;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,WAASG,iBAAT,CAA2BC,OAA3B,EAAoCC,IAApC,EAAyC;AACrC,UAAMC,aAAa,GAAGF,OAAO,CAACG,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgBJ,IAAzC,CAAtB;AACA,WAAOC,aAAP;AACH;;AAED,QAAMI,mBAAmB,GAAGP,iBAAiB,CAACH,UAAD,EAAa,WAAb,CAA7C;AACA,QAAMW,gBAAgB,GAAGR,iBAAiB,CAACH,UAAD,EAAa,QAAb,CAA1C,CAd+B,CAe/B;AACA;AACA;;AAEA,WAASY,gBAAT,CAA0BR,OAA1B,EAAkC;AAC9B,UAAMS,kBAAkB,GAAGT,OAAO,CAACU,IAAR,CAAaN,MAAM,IAAIA,MAAM,CAACO,IAAP,KAAgB,uBAAvC,CAA3B;AACA,WAAOF,kBAAP;AACH;;AAED,QAAMG,uBAAuB,GAAG,IAAIC,KAAJ,CAAUL,gBAAgB,CAACF,mBAAD,CAA1B,CAAhC;AACA,QAAMQ,YAAY,GAAGP,gBAAgB,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBV,gBAAgB,CAACW,MAA5C,CAAD,CAArC;AACA,QAAMC,MAAM,GAAGZ,gBAAgB,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBV,gBAAgB,CAACW,MAA5C,CAAD,CAA/B,CA1B+B,CA2B/B;;AAEA,WAASE,UAAT,CAAoBpB,OAApB,EAA4B;AACxB,UAAMqB,YAAY,GAAGrB,OAAO,CAACsB,MAAR,CAAe,CAACC,KAAD,EAAQnB,MAAR,KAAmBA,MAAM,CAACoB,OAAP,GAAiBD,KAAnD,EAA0D,GAA1D,CAArB;AACA,WAAOF,YAAP;AACH;;AAED,QAAMI,aAAa,GAAGL,UAAU,CAAC,CAACD,MAAD,EAASL,YAAT,CAAD,CAAhC,CAlC+B,CAqC/B;AACA;AACA;;AAEA,sBACI;AAAA,cACKW;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA/CD;;GAAM9B,Q;;KAAAA,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst Planning = ({allRecipes}) => {\n\n    const [updatedRecipes, setUpdatedRecipes] = useState([]);\n\n    useEffect(() => { // 16 Effect\n        setUpdatedRecipes(allRecipes)\n    }, [allRecipes]);\n\n    function findRecipesByType(recipes, meal){\n        const recipesByType = recipes.filter(recipe => recipe.type === meal);\n        return recipesByType;\n    }\n\n    const recipesForBreakfast = findRecipesByType(allRecipes, \"Breakfast\");\n    const recipesForDinner = findRecipesByType(allRecipes, \"Dinner\");\n    // const recipesForFish = findRecipesByType(allRecipes, \"Fish\");\n    // const recipesForMeat = findRecipesByType(allRecipes, \"Meat\");\n    // const recipesForVegetables = findRecipesByType(allRecipes, \"Vegetables\");\n\n    function typicalBreakfast(recipes){\n        const sausageAndEggSalad = recipes.find(recipe => recipe.name === \"Sausage And Egg Salad\");\n        return sausageAndEggSalad;\n    }\n\n    const breakfastMondayToFriday = new Array(typicalBreakfast(recipesForBreakfast));\n    const mondayDinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)];\n    const dinner = recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)];\n    // const mondayMenu = [...dinner, ...mondayDinner];\n\n    function addProtein(recipes){\n        const totalProtein = recipes.reduce((total, recipe) => recipe.protein + total, 0.0);\n        return totalProtein\n    }\n\n    const mondayProtein = addProtein([dinner, mondayDinner]);\n\n\n    // const mondayBreakfast = new Array(mondayBreakfastRecipe(recipesForBreakfast));\n    // const mondayDinner = new Array(recipesForDinner[Math.floor(Math.random() * recipesForDinner.length)]);\n    // const mondayMenu = [...mondayBreakfast, ...mondayDinner];\n\n    return(\n        <div>\n            {mondayProtein}\n        </div>\n    )\n\n}\n\nexport default Planning;\n"]},"metadata":{},"sourceType":"module"}