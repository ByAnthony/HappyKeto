{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Monday from './Monday';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Planning = ({\n  recipesList,\n  typicalBreakfast,\n  weekendBreakfast,\n  allDinner\n}) => {\n  _s();\n\n  const [updatedRecipes, setUpdatedRecipes] = useState([]); // 1\n\n  const [breakfastMonFri, setbreakfastMonFri] = useState([]); // 2\n\n  const [breakfastList, setBreakfastList] = useState([]); // 3\n\n  const [dinnerList, setDinnerList] = useState([]); // 4\n\n  const [monday, setMonday] = useState([]); // 5\n\n  const [tuesday, setTuesday] = useState([]); // 6\n  // const [wednesday, setWednesday] = useState([]);\n  // const [thursday, setThursday] = useState([]);\n  // const [friday, setFriday] = useState([]);\n  // const [saturday, setSaturday] = useState([]);\n  // const [sunday, setSunday] = useState([]);\n\n  useEffect(() => {\n    setUpdatedRecipes(recipesList);\n  }, [recipesList]);\n  useEffect(() => {\n    setbreakfastMonFri(typicalBreakfast);\n  }, [typicalBreakfast]);\n  useEffect(() => {\n    setBreakfastList(weekendBreakfast);\n  }, [weekendBreakfast]);\n  useEffect(() => {\n    setDinnerList(allDinner);\n  }, [allDinner]);\n\n  const handleClick = function () {\n    onClick();\n  };\n\n  const onClick = function () {\n    findMondayMenu();\n    findTuesdayMenu();\n  };\n\n  const findMondayMenu = function () {\n    const breakfast = breakfastMonFri;\n    const dinners = matchDinnerWithTypicalBreakfast(dinnerList);\n    const dinner = new Array(dinners[Math.floor(Math.random() * dinners.length)]);\n    removeDinnerFromList(dinner);\n    const mondayMenu = [...breakfast, ...dinner];\n    monday.push(mondayMenu);\n    setMonday(mondayMenu);\n  };\n\n  const findTuesdayMenu = function () {\n    const breakfast = breakfastMonFri;\n    const dinners = matchDinnerWithTypicalBreakfast(dinnerList);\n    const dinner = new Array(dinners[Math.floor(Math.random() * dinners.length)]);\n    removeDinnerFromList(dinner);\n    const tuesdayMenu = [...breakfast, ...dinner];\n    tuesday.push(tuesdayMenu);\n    setMonday(mondayMenu);\n  };\n\n  const matchDinnerWithTypicalBreakfast = function (recipes) {\n    const dinnerRecipes = recipes;\n    let possibleDinner = dinnerRecipes;\n    dinnerRecipes.filter(function (recipe) {\n      if (recipe.protein > 68.8) {\n        dinnerRecipes.splice(recipe, 1);\n      } else if (recipe.carbohydrate > 20.1) {\n        dinnerRecipes.splice(recipe, 1);\n      } else if (recipe.fat > 70.9) {\n        dinnerRecipes.splice(recipe, 1);\n      }\n\n      return possibleDinner;\n    });\n    return possibleDinner;\n  };\n\n  const removeDinnerFromList = function (recipe) {\n    const copiedDinnerList = [...dinnerList];\n    copiedDinnerList.splice(recipe, 1);\n    setDinnerList(copiedDinnerList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-plan\",\n      onClick: () => {\n        handleClick();\n      },\n      type: \"button\",\n      children: \"Plan Your Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planning-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planning\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table-week\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"day\",\n                children: \"Monday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Monday, {\n                monday: monday\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Planning, \"jdFvP3+N0dT5fDdZI4VSOxMgE00=\");\n\n_c = Planning;\nexport default Planning;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planning\");","map":{"version":3,"sources":["/Users/anthony/Documents/react_router_start_point/client/src/components/Planning.js"],"names":["React","useState","useEffect","Monday","Planning","recipesList","typicalBreakfast","weekendBreakfast","allDinner","updatedRecipes","setUpdatedRecipes","breakfastMonFri","setbreakfastMonFri","breakfastList","setBreakfastList","dinnerList","setDinnerList","monday","setMonday","tuesday","setTuesday","handleClick","onClick","findMondayMenu","findTuesdayMenu","breakfast","dinners","matchDinnerWithTypicalBreakfast","dinner","Array","Math","floor","random","length","removeDinnerFromList","mondayMenu","push","tuesdayMenu","recipes","dinnerRecipes","possibleDinner","filter","recipe","protein","splice","carbohydrate","fat","copiedDinnerList"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Monday from './Monday';\n\nconst Planning = ({recipesList, typicalBreakfast, weekendBreakfast, allDinner}) => {\n\n    const [updatedRecipes, setUpdatedRecipes] = useState([]);       // 1\n    const [breakfastMonFri, setbreakfastMonFri] = useState([]);     // 2\n    const [breakfastList, setBreakfastList] = useState([]);         // 3\n    const [dinnerList, setDinnerList] = useState([]);               // 4\n\n    const [monday, setMonday] = useState([]);                       // 5\n    const [tuesday, setTuesday] = useState([]);                     // 6\n    // const [wednesday, setWednesday] = useState([]);\n    // const [thursday, setThursday] = useState([]);\n    // const [friday, setFriday] = useState([]);\n    // const [saturday, setSaturday] = useState([]);\n    // const [sunday, setSunday] = useState([]);\n \n    useEffect(() => {\n        setUpdatedRecipes(recipesList)\n    }, [recipesList]);\n\n    useEffect(() => {\n        setbreakfastMonFri(typicalBreakfast)\n    }, [typicalBreakfast]);\n\n    useEffect(() => {\n        setBreakfastList(weekendBreakfast)\n    }, [weekendBreakfast]);\n\n    useEffect(() => {\n        setDinnerList(allDinner)\n    }, [allDinner]);\n\n    const handleClick = function(){\n        onClick();\n    };\n    \n    const onClick = function(){\n        findMondayMenu();\n        findTuesdayMenu();\n    }\n\n    const findMondayMenu = function(){\n        const breakfast = breakfastMonFri;\n        const dinners = matchDinnerWithTypicalBreakfast(dinnerList);\n        const dinner = new Array(dinners[Math.floor(Math.random() * dinners.length)]);\n        removeDinnerFromList(dinner);\n        const mondayMenu = [...breakfast, ...dinner];\n        monday.push(mondayMenu)\n        setMonday(mondayMenu);\n    }\n\n    const findTuesdayMenu = function(){\n        const breakfast = breakfastMonFri;\n        const dinners = matchDinnerWithTypicalBreakfast(dinnerList);\n        const dinner = new Array(dinners[Math.floor(Math.random() * dinners.length)]);\n        removeDinnerFromList(dinner);\n        const tuesdayMenu = [...breakfast, ...dinner];\n        tuesday.push(tuesdayMenu)\n        setMonday(mondayMenu);\n    }\n\n    const matchDinnerWithTypicalBreakfast = function(recipes){\n        const dinnerRecipes = recipes;\n        let possibleDinner = dinnerRecipes;\n        dinnerRecipes.filter(function(recipe){\n            if(recipe.protein > 68.8){\n                dinnerRecipes.splice(recipe, 1);\n            }\n            else if(recipe.carbohydrate > 20.1){\n                dinnerRecipes.splice(recipe, 1);\n            }\n            else if(recipe.fat > 70.9){\n                dinnerRecipes.splice(recipe, 1);\n            }\n            return possibleDinner;\n        })\n        return possibleDinner;\n    }\n\n    const removeDinnerFromList = function(recipe){\n        const copiedDinnerList = [...dinnerList];\n        copiedDinnerList.splice(recipe, 1);\n        setDinnerList(copiedDinnerList);\n    };\n\n    return(\n        <>\n        <button className=\"submit-plan\" onClick={() => {handleClick()}} type=\"button\">Plan Your Week</button>\n        <div className=\"planning-container\">\n            <div className=\"planning\">\n                <table className=\"table-week\">\n                    <tbody>\n                        <tr>\n                            <td className=\"day\">Monday</td>\n                            <Monday monday={monday}/>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        </>\n    )\n\n}\n\nexport default Planning;\n"]},"metadata":{},"sourceType":"module"}